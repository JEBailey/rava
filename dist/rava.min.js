!function(){var e={},a={},t=new WeakMap;Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector),"function"!=typeof NodeList.prototype.forEach&&"function"==typeof Array.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),e.decorate=function(e,t){a[e]=t,document.querySelectorAll(e).forEach(function(e){c(e,t)})},new MutationObserver(function(e){e.forEach(function(e){o(e.addedNodes,c),o(e.removedNodes,n)})}).observe(document.body,{attributes:!1,childList:!0,subtree:!0,characterData:!1});var o=function(e,t){e.forEach(function(e){var o=new Set;o.add(e),o.forEach(function(e){if(e.querySelectorAll)for(var c in a)e.matches(c)&&t(e,a[c]);var n=e.children;if(n)for(var r=0;r<n.length;r++)o.add(n[r]);o.delete(e)})})},c=function(e,a){var o=t.get(e);if(o||(o=new Set,t.set(e,o)),o.has(a))a.callbacks&&a.callbacks.added&&a.callbacks.added.call(e);else{o.add(a);var c=Object.getOwnPropertyNames(a),n=a.data;c.forEach(function(t){"constructor"!==t&&("events"===t&&l(e,n,a[t]),"methods"===t&&d(e,a[t]),"data"===t&&(e.data=a.data))}),a.callbacks&&(a.callbacks.created&&a.callbacks.created.call(e),a.callbacks.added&&a.callbacks.added.call(e))}},n=function(e,a){var o=t.get(e);o&&o.has(a)&&a.callbacks&&a.callbacks.removed&&a.callbacks.removed.call(e)},r=function(e,a,t){return function(o){o.target.matches(a)&&e.call(this,o,t)}},d=function(e,a){for(var t in a)e[t]=a[t].bind(e)},l=function(e,a,t){for(var o in t){var c=t[o],n=e;if("object"!=typeof c)n.addEventListener(o,function(t){c.call(e,t,a)});else{var d=o;for(var l in c){var f=r(c[l],d,a);n.addEventListener(l,function(e,a,t){return function(o){e.call(a,o,t)}}(f,e,a))}}}};"function"==typeof define&&define.amd?define(e):"undefined"!=typeof module&&module.exports?module.exports={rava:e}:window.rava=e}();